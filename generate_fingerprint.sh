IGNORE_LIST=$(cat <<EOF | sed 's/\(.*\)/-and \( -not -path \1 \)/g'
./deps/im_libs/apps/msync_proto/include/pb_msync.hrl
./deps/im_libs/apps/msync_proto/include/pb_jid.hrl
./deps/im_libs/apps/msync_proto/include/pb_keyvalue.hrl
./deps/im_libs/apps/msync_proto/include/pb_messagebody.hrl
./deps/im_libs/apps/msync_proto/include/pb_rosterbody.hrl
./deps/im_libs/apps/msync_proto/include/pb_mucbody.hrl
./deps/im_libs/apps/msync_proto/include/pb_statisticsbody.hrl
./deps/im_libs/apps/msync_proto/include/pb_conferencebody.hrl
./deps/im_libs/apps/msync_proto/src/pb_msync.erl
./deps/im_libs/apps/msync_proto/src/pb_jid.erl
./deps/im_libs/apps/msync_proto/src/pb_keyvalue.erl
./deps/im_libs/apps/msync_proto/src/pb_messagebody.erl
./deps/im_libs/apps/msync_proto/src/pb_rosterbody.erl
./deps/im_libs/apps/msync_proto/src/pb_mucbody.erl
./deps/im_libs/apps/msync_proto/src/pb_statisticsbody.erl
./deps/im_libs/apps/msync_proto/src/pb_conferencebody.erl
./src/eldap_filter_yecc.erl
./deps/gpb/src/gpb_parse.erl
./deps/gpb/include/gpb_version.hrl
./deps/gpb/src/gpb_scan.erl
./include/ELDAPv3.hrl
./src/ELDAPv3.erl
./include/XmppAddr.hrl
./src/XmppAddr.erl
./src/fingerprint.erl
./user_default.erl
EOF
)

SRC_SHA1=$(find . \( -path '*/src/*.erl' -or -path '*/include/*.hrl' -or -iname '*.c' -or -iname '*.h' \) $IGNORE_LIST |
                  sort --dictionary-order |
                  grep -v '/previous_release/' | grep -v '/rel/' |
                  tee ./deps/filelist.txt |
                  xargs -n1 cat | tee all.txt |
                  sha1sum | awk '{print $1}')


GIT_SHA1=$(git rev-parse HEAD)

cat <<EOF
     generating fingerprint
     SRC_SHA1 = $SRC_SHA1
     GIT_SHA1 = $GIT_SHA1

EOF

cat <<EOF  > src/fingerprint.erl
%% generated by generate_fingerprint.sh at $(date)
-module(fingerprint).
-compile([export_all]).

src_sha1() ->
    <<"$SRC_SHA1">>.

git_sha1() ->
    <<"$GIT_SHA1">>.

EOF
