[
 {msync,
  [
   {port, 6717},
   {health_server, [
                    {host, "localhost"},
                    {port, "8080"},
                    {path, "/health"}
                   ]},
   {health_monitor_period, 6000000},
   {cluster, bcssy},
   {is_msync, true},
   {process_queue_warn_len, 200},
   {odbc_ping_threshold, 100000},
   {redis_ping_threshold, 100000},
   {session_ping_threshold, 100000},
   {conn_num_limit, 100000},
   {worker_num_limit, 100},
   {httpc_timeout, 10000},
   {enable_media_request_transfer, true},
   {conference_expiration_ms, 15000},
   {shaper, [
             {rest,1000},
             {fast,50000},
             {normal,3000}
            ]},
   {all_checks, [
                 health_check_conn_num,
                 health_check_kafka,
                 health_check_lager,
                 health_check_process_queue,
                 health_check_redis,
                 health_check_session,
                 health_check_worker_num
                ]},
   {session_db_type, redis},
   {enable_multi_devices, false},
   {enable_session_db_hotswap, true},
   {pid_path, "/data/apps/var/msync/msync.pid"},
   {sock_opts, [{backlog, 4096},
                {nodelay, true},
                {recbuf, 4096},
                {other_options, [{keepalive, true},
                                 {sndbuf,4096},
                                 {buffer, 1460},
                                 {send_timeout_close,true},
                                 {exit_on_close,true},
                                 {send_timeout, 15000}]}]},
   {user_auth_module, msync_user_with_poolboy},
   {turnServers,
          [{<<"easemob.com">>, ["52.52.125.47:3478"]}]},
   {media_server_port, 6666},
   {enable_message_limit_queue, false},
   {message_queue_features, [message_queue_readmsg]},
   {message_queue_readmsg, [kafka_message_queue_large_chatroom_normal,
                            kafka_message_queue_large_chatroom_low,
                            kafka_message_queue_large_group_normal
                           ]},
   {message_limit_queue,
    [{queue_num, 10},
     {queue_type, redis},
     {kafka_key, kafka_message_limit_queue},
     {redis_key, message_limit_queue},
     {redis_topic_prefix, <<"msync:msg:queue:">>}]},
   {mod_message_limit,
    [{speed,5000},
     {read, true},
     {sleep_time, 1000},
     {rate_list,[{0,0},{2000,0},{2001,80}]},
     {member_num_to_down_speed,[{0,1000},{1000,30},{3000,10}]},
     {statistics_expire_time, 1000},
     {refresh_interval, 60000}]},
   {store_nodes,
          [{muc,['ejabberd@ejabberd-session']}]
   }
   ]},
 {ticktick,
  [
   {machine_id, 501 },
   {ip, "0.0.0.0"},
   %% 8080 is used by mochiweb
   {port, 18080}
  ]},
 {im_thrift,
   [{services,
     [
      [{service, conference_service_thrift},
       {host, "webrtc_conference"},
       {port, 6996},
       {options, [{framed, true},
                  {connect_timeout, 2000},
                  {recv_timeout, 2000},
                  {sockopts, [{keepalive, true}]}]},
       {pool_size, 4},
       {max_overflow, 20}],
      [{service, rtc_service_thrift},
           {host, "webrtc_rtcserver"},
           {port, 7996},
           {options, [{framed, true},
                      {connect_timeout, 2000},
                      {recv_timeout, 2000},
                      {sockopts, [{keepalive, true}]}]},
           {pool_size, 4},
           {max_overflow, 20}],
      [{service, user_service_thrift},
        {host_port_list, [{"thrift", 9999}]},
        {options, [{framed, true},
                   {connect_timeout, 1000},
                   {recv_timeout, 1000},
                   {sockopts, [{keepalive, true}]}]},
        {strategy, fifo},
        {pool_size, 10},
        {max_overflow, 20}],
      [{service, groupService_thrift},
            {host_port_list, [
            {"thrift-group", 10999}
          ]},
       {options, [{framed, true},
                {connect_timeout, 10000},
                {recv_timeout, 10000},
                {sockopts, [{keepalive, true}]}]},
       {pool_size, 10},
       {max_overflow, 50}],
      [{service, behavior_service_thrift},
       {host, "antispam"},
       {port, 9595},
       {options, [{framed, true},
                  {connect_timeout, 1000},
                  {recv_timeout, 1000},
                  {sockopts, [{keepalive, true}]}]},
       {pool_size, 4},
       {max_overflow, 20}],
      [{service, text_parse_service_thrift},
       {host, "antispam"},
       {port, 8090},
       {options, [{framed, true},
                  {connect_timeout, 1000},
                  {recv_timeout, 1000},
                  {sockopts, [{keepalive, true}]}]},
       {pool_size, 4},
       {max_overflow, 20}]
     ]}]},
 {brod,
       [{ clients , [{ brod_client,
                       [{ endpoints, [{"kafka", 9092}]},
                        { reconnect_cool_down_seconds, 10},
                        { required_acks, 1},
                        {auto_start_producers, true}
                        ]}]}]},
 {message_store, [
                  {resource_expire_time, 86400000},
                  {resource_len, 10},
                  {platform_resource_len, []},
                  {devices_limit_enabled, false},
                  {rest_event,[group_event_topic1,group_event_topic2]},
                  {group_event_topic1,[
                            {host, "redis"},
                            {port, 6379},
                            {db, 0},
                            {topic_name, "im:groups:event:group"}
                  ]},
                  {group_event_topic2,[
                            {host, "redis"},
                            {port, 6379},
                            {db, 0},
                            {topic_name, "im:groups:event:chatroom"}
                  ]},
                  {id_cache_time, 300},
                  {lager_monitor, false},
                  {app_config_param_list, [use_roster, use_keyword_scan, open_keyword_scan
                                  ,roster_only, send_timestamp, use_privacy
                                  ,use_sub_store, use_video, use_audio
                                  ,use_video_turnserver, use_audio_turnserver, use_group_maxuser_limit
                                  ,use_offline_msg_limit, use_offline_push, use_offline_kafka
                                  ,use_receive_kafka, offline_conversation_cover, antispam_send
                                  ,antispam_receive, muc_presence, muc_presence_async
                                  ,separate_worker, use_multi_resource, use_multi_devices
                                  ,send_chatroom_history, muc_receive_odbc, large_group_cursor_section
                                  ,apns_mute, user_login_disabled, max_sessions
                                  ,max_sessions_limit, unique_client_msgid, enable_msg_ext_decode
                                  ,enable_decode_compatible, check_nickname
                                 ]},
                  {redis, [kafka_log, codis_session, ssdb_body, index, body, appconfig, roster, log, muc, privacy, resource, group_msg, unique_msg, message_limit_queue, roam_index]},
                  {log, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50}
                        ]},
                  {ssdb_body, [
                          {host, "redis"},
                          {port, 6379},
                          {db, 0},
                          {pool_size, 50}
                         ]},
                  {index, [
                           {host, "redis"},
                           {port, 6379},
                           {db, 0},
                           {pool_size, 50}
                          ]},
                  {resource, [
                              {host, "redis"},
                              {port, 6379},
                              {db, 0},
                              {pool_size, 50}
                             ]},
                  {body, [
                          {host, "redis"},
                          {port, 6379},
                          {db, 0},
                          {pool_size, 50}
                         ]},
                  {roster, [
                            {host, "redis"},
                            {port, 6379},
                            {db, 0},
                            {pool_size, 50},
                            {ttl_keepalive_secs, 86400}
                           ]},
                  {kafka_log, [
                               {host, "redis"},
                               {port, 6379},
                               {db, 0},
                               {pool_size, 50}
                              ]},
                  {appconfig, [
                               {host, "redis"},
                               {port, 6379},
                               {db, 0},
                               {pool_size, 50}
                              ]},
                  {muc, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {privacy, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {codis_session, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {group_msg, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {unique_msg, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {roam_index, [
                         {host, "pika"},
                         {port, 9221},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {message_limit_queue, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 50},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {kafka_client_default,[
                                         {restart_delay_seconds,5},
                                         {max_metadata_sock_retry,1},
                                         {get_metadata_timeout_seconds,5},
                                         {reconnect_cool_down_seconds,1},
                                         {allow_topic_auto_creation,true}
                                        ]},
                  {kafka_producer_default,[
                                           {required_acks,1},
                                           {ack_timeout,1000},
                                           {partition_buffer_limit, 5120},
                                           {partition_onwire_limit, 1},
                                           {max_batch_size,1048576},
                                           {max_retries, 3},
                                           {retry_backoff_ms, 500},
                                           {compression, gzip},
                                           {min_compression_batch_size, 2048}
                                          ]},
                  {kafka_consumer_default,[
                                           {min_bytes, 0},
                                           {max_bytes, 1048576},
                                           {max_wait_time, 10000},
                                           {sleep_timeout, 1000},
                                           {prefetch_count, 10000},
                                           {begin_offset, earliest},
                                           {offset_reset_policy, reset_by_subscriber}
                                          ]},
                  {kafka_group_default,[
                                        {offset_commit_policy, commit_to_kafka_v2},
                                        {offset_commit_interval_seconds, 1},
                                        {rejoin_delay_seconds, 1},
                                        {max_rejoin_attempts, 30}
                                       ]},
                  {kafka,[kafka_message_limit_queue,
                          kafka_message_queue_large_chatroom_normal,
                          kafka_message_queue_large_chatroom_low,
                          kafka_message_queue_large_group_normal,
                          kafka_message_log
                         ]},
                  {kafka_message_limit_queue,[
                                              {host, "kafka"},
                                              {port, 9092},
                                              {topic_name, <<"msync-im-message-limit-queue">>},
                                              {topic_num, 10}
                                             ]},
                  {kafka_message_queue_large_chatroom_normal,[
                                                              {host, "kafka"},
                                                              {port, 9092},
                                                              {topic_name, <<"msync-message-queue-large-chatroom-normal">>},
                                                              {topic_num, 1}
                                                             ]},
                  {kafka_message_queue_large_chatroom_low,[
                                                           {host, "kafka"},
                                                           {port, 9092},
                                                           {topic_name, <<"msync-message-queue-large-chatroom-low">>},
                                                           {topic_num, 1}
                                                          ]},
                  {kafka_message_queue_large_group_normal,[
                                                           {host, "kafka"},
                                                           {port, 9092},
                                                           {topic_name, <<"msync-message-queue-large-group-normal">>},
                                                           {topic_num, 1}
                                                          ]},
                  {kafka_message_log,[
                                      {host, "kafka"},
                                      {port, 9092},
                                      {pool_size, 2}
                                     ]},
                  {app_max_sessions, 10000000},
                  {is_push_index_cursor, false},
                  {enable_thrift_group, true},
                  {full_large_group, false},
                  {read_group_cursor, false},
                  {read_group_index, true},
                  {is_push_index_cursor, true},
                  {odbc_shard_conn_switch, false},
                  {enable_mysql_index, false},
                  {enable_mysql_body_write, false},
                  {enable_mysql_body_read, false},
                  {enable_ssdb_body_write, true},
                  {enable_ssdb_body_read, true},
                  {enable_redis_body_write, true},
                  {enable_redis_body_read, true},
                  {ssdb_body_expire_time, 604800},

                  {odbc_type, mysql},
                  {odbc_server,<<"mysql">>},
                  {odbc_database,<<"ejabberd">>},
                  {odbc_username,<<"ejabberd">>},
                  {odbc_password,<<"ejabberd">>},
                  {odbc_port,3306},
                  {odbc_pool_size, 1},
                  %% start interval in seconds.
                  {odbc_start_interval, 30},
                  {odbc_shards,
                   [{32,
                     [{port, 3306},
                      {database, <<"ejabberd">>},
                      {username, <<"mysql">>},
                      {password, <<"123456">>},
                      {start_interval, 30},
                      {pool_size, 1}]},
                    {0, [{server, <<"mysql">>}] },
                    {1, [{server, <<"mysql">>}] },
                    {2, [{server, <<"mysql">>}] },
                    {3, [{server, <<"mysql">>}] },
                    {4, [{server, <<"mysql">>}] },
                    {5, [{server, <<"mysql">>}] },
                    {6, [{server, <<"mysql">>}] },
                    {7, [{server, <<"mysql">>}] },
                    {8, [{server, <<"mysql">>}] },
                    {9, [{server, <<"mysql">>}] },
                    {10, [{server, <<"mysql">>}] },
                    {11, [{server, <<"mysql">>}] },
                    {12, [{server, <<"mysql">>}] },
                    {13, [{server, <<"mysql">>}] },
                    {14, [{server, <<"mysql">>}] },
                    {15, [{server, <<"mysql">>}] },
                    {16, [{server, <<"mysql">>}] },
                    {17, [{server, <<"mysql">>}] },
                    {18, [{server, <<"mysql">>}] },
                    {19, [{server, <<"mysql">>}] },
                    {20, [{server, <<"mysql">>}] },
                    {21, [{server, <<"mysql">>}] },
                    {22, [{server, <<"mysql">>}] },
                    {23, [{server, <<"mysql">>}] },
                    {24, [{server, <<"mysql">>}] },
                    {25, [{server, <<"mysql">>}] },
                    {26, [{server, <<"mysql">>}] },
                    {27, [{server, <<"mysql">>}] },
                    {28, [{server, <<"mysql">>}] },
                    {29, [{server, <<"mysql">>}] },
                    {30, [{server, <<"mysql">>}] },
                    {31, [{server, <<"mysql">>}] }
                    ]},
                  {max_fsm_queue, 1000},
                  {odbc_keepalive_interval, 90},
                  {store, [{pool_size, 1}]},
                  {offline, [{pool_size, 1}]},
                  {log_redis, [
                               {redis_topic, "ejabberd:chat:messages"},
                               {redis_offline_topic, "ejabberd:chat:offlines"},
                               {pool_size, 1}
                              ]},
                  {kafka_client_module, brod},
                  {queue_log_module, kafka},
                  {log_kafka, [
                               {kafka_outgoing_msg_topic, <<"ejabberd-chat-messages">>},
                               {kafka_incoming_msg_topic, <<"ejabberd-chat-recvmsgs">>},
                               {kafka_offline_msg_topic, <<"ejabberd-chat-offlines">>},
                               {kafka_incoming_ack_large_group_topic, <<"im-messages-deliver">>},
                               {kafka_offline_msg_large_group_topic, <<"im-messages-offline">>},
                               {kafka_ackmsg_topic, <<"im-messages-ack">>},
                               {kafka_ackmsg_large_group_topic, <<"im-messages-ack-large-group">>},
                               {kafka_user_statistics_topic, <<"im-user-statistics">>},
                               {kafka_roster_topic, <<"im-roster">>},
                               {kafka_broker_host, "kafka"},
                               {kafka_broker_port, 9092},
                               {kafka_per_partition_workers, 1},
                               {kafka_pool_size, 1}
                              ]}]},
 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "/data/apps/opt/msync/log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "/data/apps/opt/msync/log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
        ]},
  {lager, [
            { async_threshold, 10},
            { async_threshold_window,5},
            { handlers ,
              [
                { lager_file_backend, [{file, "/data/apps/opt/msync/log/info.log"},
                                       {level, info},
                                       {size, 209715200},
                                       {date, "$D0"},
                                       {count, 200},
                                       {high_water_mark, 5000},
                                       {sync_on, critical}
                                      ]},
                { lager_file_backend, [{file, "/data/apps/opt/msync/log/error.log"},
                                       {level, error},
                                       {count, 10},
                                       {high_water_mark, 1000},
                                       {sync_on, critical}
                                       ]}
              ]}]},
{erl_om,
  [{port, 9090},
   {handlers,
    [
     {"/ejabberd_om", {erl_om_handler_esp, handle,
                     [{root,"/data/apps/opt/erl_tool/ejabberd"},
                      {drop,2}]}},
     {"/common_om", {erl_om_handler_esp, handle,
                     [{root,"/data/apps/opt/erl_tool/common"},
                      {drop,2}]}},
     {"/msync_om", {erl_om_handler_esp, handle,
                     [{root,"/data/apps/opt/erl_tool/msync"},
                      {drop,2}]}}
    ]}]},
{etcdc, [{enable_etcd_service_disc, true},
         {etcd_server_list, "172.16.0.161:2379,172.16.0.163:2379,172.16.0.164:2379"},
         {client_retry_times, 3},
         {global_machine_id_key, "/imstest/globalmachineid"}, %% unique in one cluster
         {global_machine_id_start, 1},
         {global_machine_id_end, 800},
         {msync_machine_id_prefix, "/imstest/machinetoid"},
         {msync_id_machine_prefix, "/imstest/idtomachine"},
         {node_heartbeat_interval, 2000},
         {update_etcd_cache_interval, 3000},
         {ejabberd_storenode_prefix, ["/imstest/vip1/ejabberd/storenode/muc"]},
         {msync_node_prefix, ["/imstest/vip1/msync/node/all"]},
         {machineid_disc_file, "./filename"},

         {etcd_config_enable_applist, [msync, im_thrift, message_store, brod]},
         {etcd_config_backup_file_dir, "./config_back_dir/"},
         {etcd_config_prefix, "/imstest/vip1/msync/config/worker"},
         {enable_etcd_config, false}
         ]},
 {eredis, [{hibernate_timeout, 1000}
           ]}
].



%% Local Variables:
%% mode:erlang
%% coding: undecided-unix
%% End:
