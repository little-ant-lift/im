[
 {msync,
  [
   {pid_path,"/var/log/msync/msync.pid"},
   {port, 6717},
   {web_port, 9091},
   {user, [{pool_size, 2},
           {servers, <<"thrift:9999">>}]},
   {turnServers,[{<<"easemob.com">>,["121.41.87.159:3478"]}]},
   {user_auth_module,msync_user_with_poolboy},
   {realtime_limit,60000},
   {shaper,[{rest,1000},{fast,50000},{normal,1000}]},
   {overload,500},
   {store_nodes,[{all,['ejabberd@ejabberd-session']},
                 {muc,['ejabberd@ejabberd-session']}]}
  ]
 },
 {ticktick,
  [
   {machine_id, 0},
   {ip, "0.0.0.0"},
   %% 8080 is used by mochiweb
   {port, 18080}
  ]},
 {erl_om,
  [{port, 9090}, %% 选一个不冲突的端口
   {handlers,
    [
     %% 类似 nginix 的规则文件，正则表达式 -> {处理模块， 处理函数，[配置]}
     {"^/im_api/muc/", {web_group, handle, [{drop, 3}]}},
     {"/migrate", {migrate_offline_full, handle_rest}},
     {"/migrate_om", {erl_om_handler_esp, handle,
                      [{root,"/data/apps/opt/im_libs/bin/erl_tool/migrate"},
                       {drop,2}]}},
     {"/ejabberd_om", {erl_om_handler_esp, handle,
                       [{root,"/data/apps/opt/erl_tool/ejabberd"},
                        {drop,2}]}},
     {"/common_om", {erl_om_handler_esp, handle,
                     [{root,"/data/apps/opt/erl_tool/common"},
                      {drop,2}]}},
     {"/msync_om", {erl_om_handler_esp, handle,
                    [{root,"/data/apps/opt/erl_tool/msync"},
                     {drop,2}]}}
    ]}]},
 {message_store, [
                  {enable_ssdb_body, true},
                  {odbc_shard_conn_switch, true},
                  {message_body_database_type, ssdb},
                  {ssdb_body_expire_time, 604800},
                  {redis, [index, body, appconfig, roster, log, muc, privacy, resource, group_msg, cursor, kafka_log, ssdb_body]},
                  {kafka_log, [
                               {host, "redis"},
                               {port, 6379},
                               {db, 0},
                               {pool_size, 1}
                              ]},
                  {log, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 1}
                        ]},
                  {index, [
                           {host, "redis"},
                           {port, 6379},
                           {db, 0},
                           {pool_size, 1}
                          ]},
                  {body, [
                          {host, "redis"},
                          {port, 6379},
                          {db, 0},
                          {pool_size, 1}
                         ]},
                  {muc, [
                         {host, "redis"},
                         {port, 6379},
                         {db, 0},
                         {pool_size, 1},
                         {ttl_keepalive_secs, 86400}
                        ]},
                  {appconfig, [
                               {host, "redis"},
                               {port, 6379},
                               {db, 0},
                               {pool_size, 1},
                               {ttl_keepalive_secs, 86400}
                              ]},
                  {roster, [
                            {host, "redis"},
                            {port, 6379},
                            {db, 0},
                            {pool_size, 1},
                            {ttl_keepalive_secs, 86400}
                           ]},
                  {privacy, [
                             {host, "redis"},
                             {port, 6379},
                             {db, 0},
                             {pool_size, 1},
                             {ttl_keepalive_secs, 86400}
                            ]},
                  {resource, [
                              {host, "redis"},
                              {port, 6379},
                              {db, 0},
                              {pool_size, 1}
                             ]},
                  {group_msg, [
                               {host, "redis"},
                               {port, 6379},
                               {db, 0},
                               {pool_size, 1}
                              ]},
                  {cursor, [
                            {host, "redis"},
                            {port, 6379},
                            {db, 0},
                            {pool_size, 1}
                           ]},
                  {ssdb_body, [
                          {host, "ssdb"},
                          {port, 8888},
                          {db, 0},
                          {pool_size, 1}
                         ]},
                  {odbc_type, mysql},
                  {odbc_server,<<"mysql">>},
                  {odbc_database,<<"ejabberd">>},
                  {odbc_username,<<"mysql">>},
                  {odbc_password,<<"123456">>},
                  {odbc_port,3306},
                  {odbc_pool_size, 1},
                  %% start interval in seconds.
                  {odbc_start_interval, 30},
                  {odbc_shards,
                   [{32,
                     [{server, <<"mysql">>},
                      {port, 3306},
                      {start_interval, 30},
                      {database, <<"ejabberd">>},
                      {username, <<"mysql">>},
                      {password, <<"123456">>},
                      {pool_size, 1}]},
                    {0, [{server, <<"mysql">>}] },
                    {1, [{server, <<"mysql">>}] },
                    {2, [{server, <<"mysql">>}] },
                    {3, [{server, <<"mysql">>}] },
                    {4, [{server, <<"mysql">>}] },
                    {5, [{server, <<"mysql">>}] },
                    {6, [{server, <<"mysql">>}] },
                    {7, [{server, <<"mysql">>}] },
                    {8, [{server, <<"mysql">>}] },
                    {9, [{server, <<"mysql">>}] },
                    {10, [{server, <<"mysql">>}] },
                    {11, [{server, <<"mysql">>}] },
                    {12, [{server, <<"mysql">>}] },
                    {13, [{server, <<"mysql">>}] },
                    {14, [{server, <<"mysql">>}] },
                    {15, [{server, <<"mysql">>}] },
                    {16, [{server, <<"mysql">>}] },
                    {17, [{server, <<"mysql">>}] },
                    {18, [{server, <<"mysql">>}] },
                    {19, [{server, <<"mysql">>}] },
                    {20, [{server, <<"mysql">>}] },
                    {21, [{server, <<"mysql">>}] },
                    {22, [{server, <<"mysql">>}] },
                    {23, [{server, <<"mysql">>}] },
                    {24, [{server, <<"mysql">>}] },
                    {25, [{server, <<"mysql">>}] },
                    {26, [{server, <<"mysql">>}] },
                    {27, [{server, <<"mysql">>}] },
                    {28, [{server, <<"mysql">>}] },
                    {29, [{server, <<"mysql">>}] },
                    {30, [{server, <<"mysql">>}] },
                    {31, [{server, <<"mysql">>}]}]},
                  {max_fsm_queue, 1000},
                  {odbc_keepalive_interval, 90},
                  {store, [{pool_size, 2}]},
                  {offline, [{pool_size, 2}]},
                  {log_redis, [
                               {redis_topic, "ejabberd:chat:messages"},
                               {redis_offline_topic, "ejabberd:chat:offlines"},
                               {pool_size, 1}
                              ]},
                  {log_kafka, [
                               {kafka_outgoing_msg_topic, <<"ejabberd-chat-messages">>},
                               {kafka_incoming_msg_topic, <<"ejabberd-chat-recvmsgs">>},
                               {kafka_offline_msg_topic, <<"ejabberd-chat-offlines">>},
                               {kafka_incomiing_ack_large_group_topic, <<"im-messages-deliver">>},
                               {kafka_offline_msg_large_group_topic, <<"im-messages-offline">>},
                               {kafka_ackmsg_topic, <<"im-messages-ack">>},
                               {kafka_ackmsg_large_group_topic, <<"im-messages-ack-large-group">>},
                               {kafka_status_topic, <<"ejabberd-user-status-change">>},
                               {kafka_muc_opt_topic, <<"ejabberd-muc-opt">>},
                               {kafka_muc_member_topic, <<"ejabberd-muc-mem">>},
                               {kafka_broker_host, "kafka"},
                               {kafka_broker_port, 9092},
                               {kafka_per_partition_workers, 1},
                               {kafka_pool_size, 1}
                              ]}]},
 {im_thrift,
  [{services,
    [
     [{service, conference_service_thrift},
      {host, "sdb-ali-hangzhou-turn2"},
      {port, 6996},
      {options, [{framed, true},
                 {connect_timeout, 1000},
                 {recv_timeout, 1000},
                 {sockopts, [{keepalive, true}]}]},
      {pool_size, 4},
      {max_overflow, 20}],
     [{service, behavior_service_thrift},
      {host, "sdb-ali-hangzhou-antispam1"},
      {port, 9595},
      {options, [{framed, true},
                 {connect_timeout, 1000},
                 {recv_timeout, 1000},
                 {sockopts, [{keepalive, true}]}]},
      {pool_size, 4},
      {max_overflow, 20}],
     [{service, text_parse_service_thrift},
      {host, "sdb-ali-hangzhou-antispam1"},
      {port, 8090},
      {options, [{framed, true},
                 {connect_timeout, 1000},
                 {recv_timeout, 1000},
                 {sockopts, [{keepalive, true}]}]},
      {pool_size, 4},
      {max_overflow, 20}]
    ]}
  ]},
 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
        ]},
 {lager, [
          { handlers ,
            [
              { lager_file_backend, [{file, "log/info.log"},
                                     {level, info},
                                     {size, 104857600},
                                     {date, "$D0"},
                                     {count, 10},
                                     {sync_on, critical}
                                    ]},
              {
                lager_file_backend,
                [{file, "log/error.log"},
                 {level, error},
                 {count, 10}, {sync_on, critical } ]
              }
            ]}]}
].



%% Local Variables:
%% mode:erlang
%% coding: undecided-unix
%% End:
